---
- name: AMS
  hosts: all
  become: true

  tasks:
    - name: Install aptitude using apt
      apt: name=aptitude state=latest update_cache=yes force_apt_get=yes

    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3-pip', 'virtualenv', 'python3-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest
      
    - name: Install Docker Module for Python
      pip:
        name: docker
        
    - name: Install docker-compose
      apt:
        name: docker-compose
        
    - name: Change VM.max_map_count
      command: sudo sysctl -w vm.max_map_count=262144
        
    - name: Copy docker-compose file
      copy:
        src: './templates/docker-compose.yml'
        dest: '/home/'
        mode: 0666
        
    - name: Copy alertmanager config file
      copy:
        src: './templates/alertmanager/'
        dest: '/home/alertmanager/'
        mode: 0666
        
    - name: Copy prometheus config file
      copy:
        src: './templates/prometheus/'
        dest: '/home/prometheus/'
        mode: 0666
    
    - name: Copy ELK config files
      copy:
        src: './templates/configs/'
        dest: '/home/configs/'
        mode: 0666
        
    - name: build container with docker-compose
      community.docker.docker_compose:
        project_src: "/home/"
      register: options
      
    - name: Sleep for 10 seconds
      wait_for:
        timeout: 10
      
    - name: Change ownership of elasticsearch.keystore
      community.docker.docker_container_exec:
        container: home_elk_1
        command: chown elasticsearch:elasticsearch /etc/elasticsearch/elasticsearch.keystore
      
    - name: change elastic bootstrap password
      community.docker.docker_container_exec:
        container: home_elk_1
        command: /bin/bash echo "123456789" | /opt/elasticsearch/bin/elasticsearch-keystore add "bootstrap.password" -x
        
    - name: restart elasticsearch
      community.docker.docker_container_exec:
        container: home_elk_1
        command: service elasticsearch restart
        
    - name: wait for elastisearch to be up
      wait_for_connection:
        delay: 30
        sleep: 1
        
    - name: change elastic user password
      community.docker.docker_container_exec:
        container: home_elk_1
        command: "curl -uelastic:\"123456789\" -XPUT -H 'Content-Type: application/json' 'http://localhost:9200/_xpack/security/user/elastic/_password' -d '{ \"password\":\"123456789\" }'"
        
    - name: change kibana_system user password
      community.docker.docker_container_exec:
        container: home_elk_1
        command: "curl -uelastic:\"123456789\" -XPUT -H 'Content-Type: application/json' 'http://localhost:9200/_xpack/security/user/kibana_system/_password' -d '{ \"password\":\"123456789\" }'"
    
    - name: restart elasticsearch
      community.docker.docker_container_exec:
        container: home_elk_1
        command: service elasticsearch restart
        
    - name: restart kibana
      community.docker.docker_container_exec:
        container: home_elk_1
        command: service kibana restart
   
    - name: Install mini-httpd
      apt:
        name: mini-httpd

    - name: Copy Web platform files
      copy:
        src: './AMSWebPlatform/'
        dest: '/home/AMSWebPlatform/'
        mode: 0666

    - name: Inicialize Web platform
      command: sudo mini_httpd -p 80 -d /home/AMSWebPlatform
       
